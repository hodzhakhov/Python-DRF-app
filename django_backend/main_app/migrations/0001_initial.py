# Generated by Django 4.1.10 on 2023-08-28 20:44

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_jsonform.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(db_index=True, max_length=255, unique=True)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True)),
                ('role', models.CharField(choices=[('P', 'Перевозчик'), ('D', 'Диспетчер'), ('G', 'Грузовладелец')], max_length=10)),
                ('is_organization', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city_from', models.CharField(default='', max_length=100)),
                ('city_to', models.CharField(default='', max_length=100)),
                ('stops', django_jsonform.models.fields.JSONField(blank=True)),
                ('container_type', models.CharField(default='', max_length=100)),
                ('cargo_type', models.CharField(default='', max_length=100)),
                ('temperature_regime', models.CharField(default='', max_length=100)),
                ('cargo_readiness', models.BooleanField(default=False)),
                ('loading_type', models.CharField(default='', max_length=100)),
                ('weight', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('trucks_number', models.IntegerField()),
                ('currency', models.CharField(default='', max_length=50)),
                ('rate', models.IntegerField()),
                ('prepayment', models.IntegerField()),
                ('special_requirements', models.CharField(default='', max_length=200)),
                ('loading_date', models.DateField()),
                ('date', models.DateField(auto_now=True)),
                ('phone_number', models.CharField(default='', max_length=100)),
                ('note', models.CharField(default='', max_length=500)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orders', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Transport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('container_type', models.CharField(default='', max_length=100)),
                ('loading_type', models.CharField(default='', max_length=100)),
                ('weight', models.IntegerField()),
                ('volume', models.IntegerField()),
                ('registration_number', models.CharField(default='', max_length=100)),
                ('is_available', models.BooleanField(default=False)),
                ('temperature_regime', models.CharField(default='', max_length=100)),
                ('brand', models.CharField(default='', max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transports', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('note', models.CharField(default='', max_length=1000)),
                ('rating', models.IntegerField(blank=True, default=0)),
                ('created', models.DateField(auto_now=True)),
                ('order', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, related_name='order', to='main_app.order')),
                ('performer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performer', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='review', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
